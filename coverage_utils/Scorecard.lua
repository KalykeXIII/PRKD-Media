-- Take a JSON object as input generated by the scoring python package
local input_object = {{'1', 'Rhys Wisniewski', -1, -1, {0, -1, 0, 0, 0, 0, 0, 0, 0}}, {'T2', 'Jade Brady', 'E', 'E', {-1, 0, 0, 3, 0, -1, -1, 0, 0}}, {'T2', 'Dan Frost', 'E', 'E', {0, 0, 0, 0, 0, 0, 0, 0, 0}}, {'T2', 'Ryan Hart', 'E', 'E', {0, 1, 0, -1, 0, 0, 0, 0, 0}}, {'T2', 'Blake Houston', 'E', 'E', {-1, 1, -1, 2, 0, 0, 0, -1, 0}}, {'T2', 'Tim Bohan', 'E', 'E', {0, 0, 0, 0, 0, 0, -1, 1, 0}}, {'T2', 'Aaron Moreton', 'E', 'E', {-1, 1, 0, 0, 0, -1, 0, 1, 0}}, {'T8', 'Adam Rigby', '+1', '+1', {1, 1, 0, 0, 0, -1, 0, 1, -1}}, {'T8', 'Clayton Beck', '+1', '+1', {2, -1, 0, 0, 0, 0, 0, 0, 0}}, {'T8', 'Ryan Budge', '+1', '+1', {0, 0, 0, 0, 0, 0, 0, 1, 0}}, {'T8', "Austin D'Alessandro", '+1', '+1', {1, -1, 2, 1, 1, 0, -1, -1, -1}}, {'12', 'Patrick Robinson', '+2', '+2', {0, 1, 0, 0, 0, 1, 1, -1, 0}}, {'T13', 'Paul Phillips', '+3', '+3', {1, 0, 1, 0, 0, 0, 0, 1, 0}}, {'T13', 'Abra Garfield', '+3', '+3', {1, 0, 0, 3, -1, 0, -1, 2, -1}}, {'T13', 'Jarrath Sweetten', '+3', '+3', {1, 0, 2, 0, 0, 1, -1, 0, 0}}, {'T13', 'Nicholas Halstead', '+3', '+3', {0, 0, 1, 1, 2, 0, -1, 0, 0}}, {'17', 'David Perry', '+4', '+4', {1, 1, 2, 1, -1, 0, 0, 0, 0}}, {'18', 'Stephen Kearney', '+5', '+5', {0, 1, 1, 2, 0, -1, 0, 2, 0}}, {'T19', 'Alex Tame', '+6', '+6', {1, 1, 0, 5, 0, -1, -1, 1, 0}}, {'T19', 'Sarah Lee', '+6', '+6', {1, 0, 1, 1, 0, 1, 0, 1, 1}}, {'T19', 'Michal Durand', '+6', '+6', {0, 0, 3, 1, 0, 0, 0, 3, -1}}, {'22', 'Chris Hill', '+7', '+7', {3, 0, 1, 2, 0, -1, 0, 1, 1}}, {'23', 'Leith Brodie', '+8', '+8', {1, 0, 1, 6, 0, 1, 0, -1, 0}}, {'24', 'Connor Donnelly', '+9', '+9', {0, 2, 1, 5, 0, -1, 1, 1, 0}}}
-- What index the players we have on the card are...
local player_ids = {5, 11, 13, 20}

local parObject = {}
parObject[-3] = {'Albatross', {0.72,0.45,0.11}}
parObject[-2] = {'Eagle', {0.15,0.37,0.73}}
parObject[-1] = {'Birdie', {0.02,0.6,0.36}}
parObject[0] = {'Par', {0.42,0.41,0.42}}
parObject[1] = {'Bogey', {0.73,0,0.02}}
parObject[2] = {'Double Bogey', {0.57,0.1,0.72}}
parObject[3] = {'Triple Bogey', {0.51,0.38,0.32}}

function UpdateScorecards(object)
    -- Iterate through the entire JSON object and update all of the hole scores for each player at a time
    -- TODO: Change this to only run through the 4 players on the card -> taking a player indeex as input
    for i = 1, 4, 1 do
        local playerIndex = player_ids[i]
        -- Get the player name and the player identifier
        local playerID = 'Player' .. tostring(i)
        local playerName = object[playerIndex][2]
        -- Update the player name
        UpdatePlayerName(playerID .. '_Name', playerName )
        -- Pass the starting score and the scores object
        UpdateFinalScore(playerID, object[playerIndex][4])
        -- Update Placing
        UpdateFinalPlacing(playerID .. '_Place', object[playerIndex][1])
        for j = 1, 9, 1 do
            local playerScore = parObject[object[playerIndex][5][j]]
            ChangeHoleBackground(playerID, j, playerScore)
        end
    end
end

-- Takes the player and hole completed and their score for the hole as input
-- Changes the background colour of the hole for teh given player
function ChangeHoleBackground(player, hole, holeScore)
    local backgroundTools = comp:GetToolList(false, "Background")
    for k, bg in ipairs(backgroundTools) do
        if bg.Name == player .. '_' .. tostring(hole) .. 'B_1' then
            -- Set the colour based on the score
            if not holeScore then
                bg:SetInput("TopLeftRed", 0)
                bg:SetInput("TopLeftGreen", 0)
                bg:SetInput("TopLeftBlue", 0)
                bg:SetInput("TopLeftAlpha", 0)
            else
                bg:SetInput("TopLeftRed", holeScore[2][1])
                bg:SetInput("TopLeftGreen", holeScore[2][2])
                bg:SetInput("TopLeftBlue", holeScore[2][3])
                bg:SetInput("TopLeftAlpha", 1)
            end
        end
    end
end

function UpdatePlayerName(text_name, text_content)
    local textObjects = comp:GetToolList(false, "TextPlus")
    for k, txt in ipairs(textObjects) do
        if txt.Name == text_name then
            -- Update the content of the object
            text_content = string.upper(text_content)
            txt.StyledText:SetExpression('Text("' .. text_content .. '")')
        end
    end
end

function UpdateFinalPlacing(text_name, text_content)
    local textObjects = comp:GetToolList(false, "TextPlus")
    for k, txt in ipairs(textObjects) do
        if txt.Name == text_name then
            -- Update the content of the object
            text_content = string.upper(text_content)
            txt.StyledText:SetExpression('Text("' .. text_content .. '")')
        end
    end
end

function UpdateScoreField(text_name, text_content)
    local textObjects = comp:GetToolList(false, "TextPlus")
    for k, txt in ipairs(textObjects) do
        if txt.Name == text_name then
            -- Update the content of the object
            txt.StyledText:SetExpression(text_content)
        end
    end
end

function UpdateFinalScore(player_id, starting_score)
    -- Construct the player score field name
    local fieldName = player_id .. '_Score'
    -- Process the final score to convert 0 to E and 10 to +10
    if starting_score == 'E' or starting_score == 0 then
        starting_score = 'Text("E")'
    else
        starting_score = 'Text("' .. tostring(starting_score) .. '")'
    end
    UpdateScoreField(fieldName, starting_score)
end

UpdateScorecards(input_object)